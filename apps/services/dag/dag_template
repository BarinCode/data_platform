import os
from airflow import DAG
from datetime import datetime
from airflow_clickhouse_plugin.operators.clickhouse_operator import ClickHouseOperator
import logging
import requests
import time

logger = logging.getLogger(__name__)

def notice_callback(context, event_type, msg):
    ti = context['task_instance']
    payload = {
          "task_id": ti.task_id,
          "dag_id": ti.dag_id,
          "job_name": "{{dag.dag_name}}",
          "notice_event_type": event_type,
          "user_id": {{dag.user_id}},
          "content": msg,
          "status": 0,
          "receiver": "",
          "extra": ""
    }
    ums_hostname = "{{callback.ums}}"
    if ums_hostname:
        url = f"{ums_hostname}/notice_list"
        response = requests.post(url, json=payload)
        logger.info("[ums response] code: {}".format(response.status_code))


def on_success_callback(context):
    notice_callback(context, 1, "success")

def on_failure_callback(context):
    notice_callback(context, 3, "failed")

default_args = {
    'owner': 'airflow',
    'depends_on_past': False,
    {% if dag.start_date is not none %}
    'start_date': datetime.utcfromtimestamp({{dag.start_date.timestamp()}}),
    {% endif %}
    {% if dag.end_date is not none %}
    'end_date': datetime.utcfromtimestamp({{dag.end_date.timestamp()}}),
    {% endif %}
    'retries' : {{dag.retries}},
    'retry_delay' : {{dag.retry_delay}}
}

{% for node in dag.nodes %}
os.environ['AIRFLOW_CONN_DAG_{{node.node_id}}'.upper()]='clickhouse://{{node.username}}:{{node.password}}@{{node.ip}}:{{node.port}}'
{% endfor %}

dag = DAG(
        dag_id='{{dag.dag_id}}',
        default_args=default_args,
        catchup=False,
    {% if dag.schedule_interval is not none %}
        schedule_interval='{{dag.schedule_interval}}',
    {% endif %}
        tags=['dag']
)

{% for node in dag.nodes %}
{{node.node_id}} = ClickHouseOperator(
    clickhouse_conn_id='DAG_{{node.node_id}}'.upper(),
    task_id='{{node.node_id}}',
    database='{{node.database}}',
    sql =(
    {% for sql in node.sql%}
    '''
    {{sql}}
    ''',
    {% endfor %}),
    dag = dag,
    on_success_callback = on_success_callback,
    on_failure_callback = on_failure_callback
)
{% endfor %}

{% for node_relation in dag.node_relations %}
{{node_relation}}
{% endfor %}