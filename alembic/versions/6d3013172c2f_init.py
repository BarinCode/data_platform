"""init

Revision ID: 6d3013172c2f
Revises: 
Create Date: 2022-04-12 21:15:45.667623

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6d3013172c2f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analysis',
                    sa.Column('analysis_id', sa.Integer(),
                              autoincrement=True, nullable=False, comment='指标ID'),
                    sa.Column('task_id', sa.Integer(),
                              nullable=True, comment='任务id'),
                    sa.Column('task_uuid', sa.String(length=32),
                              nullable=True, comment='任务UUID'),
                    sa.Column('task_type', sa.Enum('COMMON', 'IMPORT', 'SQL',
                                                   'DAG', name='tasktypeenum'), nullable=True, comment='任务类型'),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text(
                        'now()'), nullable=True, comment='创建时间'),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              nullable=True, comment='更新时间'),
                    sa.Column('deleted_at', sa.DateTime(timezone=True),
                              nullable=True, comment='删除时间'),
                    sa.Column('read_rows', sa.Integer(),
                              nullable=True, comment='读的行数'),
                    sa.Column('written_rows', sa.Integer(),
                              nullable=True, comment='写的行数'),
                    sa.Column('result_rows', sa.Integer(),
                              nullable=True, comment='结果的行数'),
                    sa.Column('memory_use', sa.Float(),
                              nullable=True, comment='内存使用情况'),
                    sa.Column('duration_ms', sa.Integer(),
                              nullable=True, comment='执行时间'),
                    sa.Column('query_id', sa.String(length=64),
                              nullable=True, comment='对应sql执行id'),
                    sa.Column('query_end_time', sa.DateTime(timezone=True),
                              nullable=True, comment='执行结束时间'),
                    sa.Column('query_state', sa.Enum('TO_START', 'RUNNING', 'END',
                                                     name='analysisstate'), nullable=True, comment='指标状态'),
                    sa.Column('connection_id', sa.Integer(),
                              nullable=True, comment='数据库连接id'),
                    sa.PrimaryKeyConstraint('analysis_id')
                    )
    op.create_index(op.f('ix_analysis_task_uuid'),
                    'analysis', ['task_uuid'], unique=True)
    op.create_table('common_works',
                    sa.Column('uuid', sa.String(length=32),
                              nullable=False, comment='作业UUID'),
                    sa.Column('user_id', sa.Integer(),
                              nullable=False, comment='用户ID'),
                    sa.Column('workspace_id', sa.Integer(),
                              nullable=False, comment='项目ID'),
                    sa.Column('root_workspace_id', sa.Integer(),
                              nullable=False, comment='根项目ID'),
                    sa.Column('name', sa.String(length=100),
                              nullable=False, comment='作业名称'),
                    sa.Column('description', sa.String(length=1023),
                              nullable=True, comment='作业描述'),
                    sa.Column('status', sa.Enum('WAITTING', 'EXECUTING', 'FINISHED',
                                                name='workstatusenum'), nullable=True, comment='作业状态'),
                    sa.Column('submitted_at', sa.DateTime(timezone=True),
                              nullable=True, comment='提交时间'),
                    sa.Column('submitted_by', sa.String(length=100),
                              nullable=True, comment='提交人'),
                    sa.Column('failed_retry_times', sa.Integer(),
                              nullable=True, comment='重试次数'),
                    sa.Column('retry_delta_minutes', sa.Integer(),
                              nullable=True, comment='重试间隔分钟数'),
                    sa.Column('delay_minutes', sa.Integer(),
                              nullable=True, comment='延迟分钟数'),
                    sa.Column('is_timeout_enabled', sa.Boolean(),
                              nullable=True, comment='超时判断'),
                    sa.Column('timeout_strategy', sa.Enum('MARKED_AS_FAILED', 'SEND_MESSAGE',
                                                          'NONE', name='timeoutstrategyenum'), nullable=True, comment='超时策略'),
                    sa.Column('timeout_minutes', sa.Integer(),
                              nullable=True, comment='超时分钟数'),
                    sa.Column('notice_strategy', sa.Enum('ALL', 'SUCCEED', 'FAIL', 'NONE',
                                                         name='noticestrategyenum'), nullable=True, comment='通知策略'),
                    sa.Column('timeout_template_id', sa.Integer(),
                              nullable=True, comment='超时通知模版ID'),
                    sa.Column('finish_template_id', sa.Integer(),
                              nullable=True, comment='完成通知模版ID'),
                    sa.Column('cron_expression', sa.String(length=1023),
                              nullable=True, comment='cron表达式'),
                    sa.Column('started_at', sa.DateTime(timezone=True),
                              nullable=True, comment='开始时间'),
                    sa.Column('ended_at', sa.DateTime(timezone=True),
                              nullable=True, comment='结束时间'),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text(
                        'now()'), nullable=True, comment='创建时间'),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              nullable=True, comment='更新时间'),
                    sa.Column('deleted_at', sa.DateTime(timezone=True),
                              nullable=True, comment='删除时间'),
                    sa.Column('work_id', sa.Integer(), autoincrement=True,
                              nullable=False, comment='作业ID'),
                    sa.Column('category', sa.Enum('DAG', 'SQL', 'SPARK_JAR',
                                                  name='categoryenum'), nullable=True, comment='作业类别'),
                    sa.Column('java_version', sa.Enum('JAVA_SE_8', 'JAVA_SE_11',
                                                      name='javaversionenum'), nullable=True, comment='JAVA版本'),
                    sa.Column('type', sa.Enum('STREAM', 'BATCH',
                                              name='worktypeenum'), nullable=True, comment='作业类型'),
                    sa.Column('run_frequency', sa.Enum('MINUTELY', 'ONCE', 'HOURLY', 'DAILY', 'WEEKLY',
                                                       'MONTHLY', 'YEARLY', 'ALWAYS', name='frequencyenum'), nullable=True, comment='运行频率'),
                    sa.Column('run_dependent', sa.Enum('ON_NOTHING', 'ON_PRE_SUCCEEDED',
                                                       'ON_PRE_FINISHED', name='workdependenum'), nullable=True, comment='运行依赖'),
                    sa.Column('interval', sa.Integer(),
                              nullable=True, comment='运行间隔'),
                    sa.Column('finished_batch_count', sa.Integer(),
                              nullable=True, comment='已运行任务批次数量'),
                    sa.Column('work_directory', sa.String(length=1023),
                              nullable=True, comment='工作目录'),
                    sa.Column('executable_file_name', sa.String(
                        length=1023), nullable=True, comment='可执行文件名称'),
                    sa.Column('executable_file_path', sa.String(
                        length=1023), nullable=True, comment='可执行文件路径'),
                    sa.Column('main_class_name', sa.String(
                        length=1023), nullable=True, comment='主类名称'),
                    sa.Column('extra_params', sa.String(length=1023),
                              nullable=True, comment='自定义参数'),
                    sa.Column('executable_sql', sa.Text(),
                              nullable=True, comment='可执行sql'),
                    sa.Column('connection_id', sa.Integer(),
                              nullable=False, comment='连接数据库id'),
                    sa.Column('relation', sa.Text(),
                              nullable=True, comment='节点关系'),
                    sa.Column('edges', sa.Text(),
                              nullable=True, comment='DAG边'),
                    sa.Column('nodes', sa.Text(),
                              nullable=True, comment='DAG节点'),
                    sa.PrimaryKeyConstraint('work_id')
                    )
    op.create_index(op.f('ix_common_works_connection_id'),
                    'common_works', ['connection_id'], unique=False)
    op.create_index(op.f('ix_common_works_name'),
                    'common_works', ['name'], unique=False)
    op.create_index(op.f('ix_common_works_root_workspace_id'),
                    'common_works', ['root_workspace_id'], unique=False)
    op.create_index(op.f('ix_common_works_user_id'),
                    'common_works', ['user_id'], unique=False)
    op.create_index(op.f('ix_common_works_uuid'),
                    'common_works', ['uuid'], unique=True)
    op.create_index(op.f('ix_common_works_workspace_id'),
                    'common_works', ['workspace_id'], unique=False)
    op.create_table('connections',
                    sa.Column('connection_id', sa.Integer(),
                              autoincrement=True, nullable=False, comment='连接ID'),
                    sa.Column('uuid', sa.String(length=32),
                              nullable=False, comment='任务UUID'),
                    sa.Column('workspace_id', sa.Integer(),
                              nullable=False, comment='项目ID'),
                    sa.Column('name', sa.String(length=100),
                              nullable=True, comment='连接名称'),
                    sa.Column('host', sa.String(length=100),
                              nullable=True, comment='服务器地址'),
                    sa.Column('port', sa.Integer(),
                              nullable=True, comment='服务器端口'),
                    sa.Column('username', sa.String(length=100),
                              nullable=True, comment='用户名'),
                    sa.Column('password', sa.String(length=100),
                              nullable=True, comment='密码'),
                    sa.Column('database_name', sa.String(length=100),
                              nullable=True, comment='数据库名称'),
                    sa.Column('zookeeper_host', sa.String(length=100),
                              nullable=True, comment='zookeeper地址'),
                    sa.Column('zookeeper_port', sa.Integer(),
                              nullable=True, comment='zookeeper端口'),
                    sa.Column('connection_type', sa.Enum('KAFKA', 'CHUHEDB', 'POSTGRESQL',
                                                         'DRUID', name='connectiontypeenum'), nullable=True, comment='连接类型'),
                    sa.Column('connection_info', sa.JSON(),
                              nullable=True, comment='连接参数'),
                    sa.Column('status', sa.Enum('SUCCEED', 'FAILED', 'NONE',
                                                name='connectionstatusenum'), nullable=True, comment='连接状态'),
                    sa.Column('auth_file_path', sa.String(length=1023),
                              nullable=True, comment='连接认证文件路径'),
                    sa.Column('created_by', sa.String(length=100),
                              nullable=True, comment='创建人'),
                    sa.Column('is_enabled', sa.Boolean(),
                              nullable=True, comment='是否启用'),
                    sa.Column('last_connected_at', sa.DateTime(
                        timezone=True), nullable=True, comment='最近连接时间'),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text(
                        'now()'), nullable=True, comment='创建时间'),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              nullable=True, comment='更新时间'),
                    sa.Column('deleted_at', sa.DateTime(timezone=True),
                              nullable=True, comment='删除时间'),
                    sa.PrimaryKeyConstraint('connection_id')
                    )
    op.create_index(op.f('ix_connections_uuid'),
                    'connections', ['uuid'], unique=True)
    op.create_index(op.f('ix_connections_workspace_id'),
                    'connections', ['workspace_id'], unique=False)
    op.create_table('import_work_instances',
                    sa.Column('uuid', sa.String(length=32),
                              nullable=False, comment='作业UUID'),
                    sa.Column('user_id', sa.Integer(),
                              nullable=False, comment='用户ID'),
                    sa.Column('workspace_id', sa.Integer(),
                              nullable=False, comment='项目ID'),
                    sa.Column('root_workspace_id', sa.Integer(),
                              nullable=False, comment='根项目ID'),
                    sa.Column('name', sa.String(length=100),
                              nullable=False, comment='作业名称'),
                    sa.Column('description', sa.String(length=1023),
                              nullable=True, comment='作业描述'),
                    sa.Column('status', sa.Enum('WAITTING', 'EXECUTING', 'FINISHED',
                                                name='workstatusenum'), nullable=True, comment='作业状态'),
                    sa.Column('submitted_at', sa.DateTime(timezone=True),
                              nullable=True, comment='提交时间'),
                    sa.Column('submitted_by', sa.String(length=100),
                              nullable=True, comment='提交人'),
                    sa.Column('failed_retry_times', sa.Integer(),
                              nullable=True, comment='重试次数'),
                    sa.Column('retry_delta_minutes', sa.Integer(),
                              nullable=True, comment='重试间隔分钟数'),
                    sa.Column('delay_minutes', sa.Integer(),
                              nullable=True, comment='延迟分钟数'),
                    sa.Column('is_timeout_enabled', sa.Boolean(),
                              nullable=True, comment='超时判断'),
                    sa.Column('timeout_strategy', sa.Enum('MARKED_AS_FAILED', 'SEND_MESSAGE',
                                                          'NONE', name='timeoutstrategyenum'), nullable=True, comment='超时策略'),
                    sa.Column('timeout_minutes', sa.Integer(),
                              nullable=True, comment='超时分钟数'),
                    sa.Column('notice_strategy', sa.Enum('ALL', 'SUCCEED', 'FAIL', 'NONE',
                                                         name='noticestrategyenum'), nullable=True, comment='通知策略'),
                    sa.Column('timeout_template_id', sa.Integer(),
                              nullable=True, comment='超时通知模版ID'),
                    sa.Column('finish_template_id', sa.Integer(),
                              nullable=True, comment='完成通知模版ID'),
                    sa.Column('cron_expression', sa.String(length=1023),
                              nullable=True, comment='cron表达式'),
                    sa.Column('started_at', sa.DateTime(timezone=True),
                              nullable=True, comment='开始时间'),
                    sa.Column('ended_at', sa.DateTime(timezone=True),
                              nullable=True, comment='结束时间'),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text(
                        'now()'), nullable=True, comment='创建时间'),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              nullable=True, comment='更新时间'),
                    sa.Column('deleted_at', sa.DateTime(timezone=True),
                              nullable=True, comment='删除时间'),
                    sa.Column('instance_id', sa.Integer(), autoincrement=True,
                              nullable=False, comment='作业实例ID'),
                    sa.Column('work_id', sa.Integer(),
                              nullable=False, comment='作业ID'),
                    sa.Column('sync_type', sa.Enum('ONLINE', 'OFFLINE',
                                                   name='synctypeenum'), nullable=True, comment='同步类型'),
                    sa.Column('data_source', sa.Enum('KAFKA', 'POSTGRESQL', 'ASSET', 'FTP',
                                                     'OSS', name='datasourceenum'), nullable=True, comment='导入作业来源'),
                    sa.Column('source_connection_id', sa.Integer(),
                              nullable=False, comment='数据源连接ID'),
                    sa.Column('pg_read_type', sa.Enum('FULL', 'DELTA',
                                                      name='readtypeenum'), nullable=True, comment='读取方式'),
                    sa.Column('pg_identity_field', sa.String(
                        length=100), nullable=True, comment='增量识别字段'),
                    sa.Column('pg_where_clause', sa.String(length=1023),
                              nullable=True, comment='where条件'),
                    sa.Column('kafka_topic', sa.String(length=1023),
                              nullable=True, comment='要同步的topic'),
                    sa.Column('kafka_offset_type', sa.Enum('EARLIEST', 'LATEST', 'NONE',
                                                           name='offsettypeenum'), nullable=True, comment='开始offset'),
                    sa.Column('kafka_started_at', sa.DateTime(
                        timezone=True), nullable=True, comment='数据开始时间'),
                    sa.Column('start_line_no', sa.Integer(),
                              nullable=True, comment='导入开始行'),
                    sa.Column('data_file_name', sa.String(length=1023),
                              nullable=True, comment='导入数据文件名'),
                    sa.Column('data_file_path', sa.String(length=1023),
                              nullable=True, comment='导入数据文件路径'),
                    sa.Column('extra_params', sa.String(length=1023),
                              nullable=True, comment='自定义参数'),
                    sa.Column('ftp_url', sa.String(length=1023),
                              nullable=True, comment='FTP地址'),
                    sa.Column('ftp_file_size', sa.Integer(),
                              nullable=True, comment='FTP文件大小'),
                    sa.Column('source_database_name', sa.String(
                        length=100), nullable=True, comment='数据源库名称'),
                    sa.Column('source_table_name', sa.String(
                        length=100), nullable=True, comment='数据源表名称'),
                    sa.Column('source_table_info', sa.JSON(),
                              nullable=True, comment='数据源表信息'),
                    sa.Column('dest_connection_id', sa.Integer(),
                              nullable=False, comment='目标连接ID'),
                    sa.Column('write_type', sa.Enum('OVERWRITE', 'APPEND',
                                                    name='writetypeenum'), nullable=True, comment='写入方式'),
                    sa.Column('database_name', sa.String(length=100),
                              nullable=True, comment='数据库名称'),
                    sa.Column('table_name', sa.String(length=100),
                              nullable=True, comment='表名称'),
                    sa.Column('table_info', sa.JSON(),
                              nullable=True, comment='表DESC信息'),
                    sa.Column('create_table_params', sa.String(
                        length=1023), nullable=True, comment='建表参数'),
                    sa.PrimaryKeyConstraint('instance_id')
                    )
    op.create_index(op.f('ix_import_work_instances_dest_connection_id'),
                    'import_work_instances', ['dest_connection_id'], unique=False)
    op.create_index(op.f('ix_import_work_instances_name'),
                    'import_work_instances', ['name'], unique=False)
    op.create_index(op.f('ix_import_work_instances_root_workspace_id'),
                    'import_work_instances', ['root_workspace_id'], unique=False)
    op.create_index(op.f('ix_import_work_instances_source_connection_id'),
                    'import_work_instances', ['source_connection_id'], unique=False)
    op.create_index(op.f('ix_import_work_instances_user_id'),
                    'import_work_instances', ['user_id'], unique=False)
    op.create_index(op.f('ix_import_work_instances_uuid'),
                    'import_work_instances', ['uuid'], unique=True)
    op.create_index(op.f('ix_import_work_instances_work_id'),
                    'import_work_instances', ['work_id'], unique=False)
    op.create_index(op.f('ix_import_work_instances_workspace_id'),
                    'import_work_instances', ['workspace_id'], unique=False)
    op.create_table('import_works',
                    sa.Column('uuid', sa.String(length=32),
                              nullable=False, comment='作业UUID'),
                    sa.Column('user_id', sa.Integer(),
                              nullable=False, comment='用户ID'),
                    sa.Column('workspace_id', sa.Integer(),
                              nullable=False, comment='项目ID'),
                    sa.Column('root_workspace_id', sa.Integer(),
                              nullable=False, comment='根项目ID'),
                    sa.Column('name', sa.String(length=100),
                              nullable=False, comment='作业名称'),
                    sa.Column('description', sa.String(length=1023),
                              nullable=True, comment='作业描述'),
                    sa.Column('status', sa.Enum('WAITTING', 'EXECUTING', 'FINISHED',
                                                name='workstatusenum'), nullable=True, comment='作业状态'),
                    sa.Column('submitted_at', sa.DateTime(timezone=True),
                              nullable=True, comment='提交时间'),
                    sa.Column('submitted_by', sa.String(length=100),
                              nullable=True, comment='提交人'),
                    sa.Column('failed_retry_times', sa.Integer(),
                              nullable=True, comment='重试次数'),
                    sa.Column('retry_delta_minutes', sa.Integer(),
                              nullable=True, comment='重试间隔分钟数'),
                    sa.Column('delay_minutes', sa.Integer(),
                              nullable=True, comment='延迟分钟数'),
                    sa.Column('is_timeout_enabled', sa.Boolean(),
                              nullable=True, comment='超时判断'),
                    sa.Column('timeout_strategy', sa.Enum('MARKED_AS_FAILED', 'SEND_MESSAGE',
                                                          'NONE', name='timeoutstrategyenum'), nullable=True, comment='超时策略'),
                    sa.Column('timeout_minutes', sa.Integer(),
                              nullable=True, comment='超时分钟数'),
                    sa.Column('notice_strategy', sa.Enum('ALL', 'SUCCEED', 'FAIL', 'NONE',
                                                         name='noticestrategyenum'), nullable=True, comment='通知策略'),
                    sa.Column('timeout_template_id', sa.Integer(),
                              nullable=True, comment='超时通知模版ID'),
                    sa.Column('finish_template_id', sa.Integer(),
                              nullable=True, comment='完成通知模版ID'),
                    sa.Column('cron_expression', sa.String(length=1023),
                              nullable=True, comment='cron表达式'),
                    sa.Column('started_at', sa.DateTime(timezone=True),
                              nullable=True, comment='开始时间'),
                    sa.Column('ended_at', sa.DateTime(timezone=True),
                              nullable=True, comment='结束时间'),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text(
                        'now()'), nullable=True, comment='创建时间'),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              nullable=True, comment='更新时间'),
                    sa.Column('deleted_at', sa.DateTime(timezone=True),
                              nullable=True, comment='删除时间'),
                    sa.Column('work_id', sa.Integer(), autoincrement=True,
                              nullable=False, comment='作业ID'),
                    sa.Column('sync_type', sa.Enum('ONLINE', 'OFFLINE',
                                                   name='synctypeenum'), nullable=True, comment='同步类型'),
                    sa.Column('data_source', sa.Enum('KAFKA', 'POSTGRESQL', 'ASSET', 'FTP',
                                                     'OSS', name='datasourceenum'), nullable=True, comment='导入作业来源'),
                    sa.Column('source_connection_id', sa.Integer(),
                              nullable=False, comment='数据源连接ID'),
                    sa.Column('pg_read_type', sa.Enum('FULL', 'DELTA',
                                                      name='readtypeenum'), nullable=True, comment='读取方式'),
                    sa.Column('pg_identity_field', sa.String(
                        length=100), nullable=True, comment='增量识别字段'),
                    sa.Column('pg_where_clause', sa.String(length=1023),
                              nullable=True, comment='where条件'),
                    sa.Column('kafka_topic', sa.String(length=1023),
                              nullable=True, comment='要同步的topic'),
                    sa.Column('kafka_offset_type', sa.Enum('EARLIEST', 'LATEST', 'NONE',
                                                           name='offsettypeenum'), nullable=True, comment='开始offset'),
                    sa.Column('kafka_started_at', sa.DateTime(
                        timezone=True), nullable=True, comment='数据开始时间'),
                    sa.Column('start_line_no', sa.Integer(),
                              nullable=True, comment='导入开始行'),
                    sa.Column('data_file_name', sa.String(length=1023),
                              nullable=True, comment='导入数据文件名'),
                    sa.Column('data_file_path', sa.String(length=1023),
                              nullable=True, comment='导入数据文件路径'),
                    sa.Column('extra_params', sa.String(length=1023),
                              nullable=True, comment='自定义参数'),
                    sa.Column('ftp_url', sa.String(length=1023),
                              nullable=True, comment='FTP地址'),
                    sa.Column('ftp_file_size', sa.Integer(),
                              nullable=True, comment='FTP文件大小'),
                    sa.Column('source_database_name', sa.String(
                        length=100), nullable=True, comment='数据源库名称'),
                    sa.Column('source_table_name', sa.String(
                        length=100), nullable=True, comment='数据源表名称'),
                    sa.Column('source_table_info', sa.JSON(),
                              nullable=True, comment='数据源表信息'),
                    sa.Column('dest_connection_id', sa.Integer(),
                              nullable=False, comment='目标连接ID'),
                    sa.Column('write_type', sa.Enum('OVERWRITE', 'APPEND',
                                                    name='writetypeenum'), nullable=True, comment='写入方式'),
                    sa.Column('database_name', sa.String(length=100),
                              nullable=True, comment='数据库名称'),
                    sa.Column('table_name', sa.String(length=100),
                              nullable=True, comment='表名称'),
                    sa.Column('table_info', sa.JSON(),
                              nullable=True, comment='表DESC信息'),
                    sa.Column('create_table_params', sa.String(
                        length=1023), nullable=True, comment='建表参数'),
                    sa.PrimaryKeyConstraint('work_id')
                    )
    op.create_index(op.f('ix_import_works_dest_connection_id'),
                    'import_works', ['dest_connection_id'], unique=False)
    op.create_index(op.f('ix_import_works_name'),
                    'import_works', ['name'], unique=False)
    op.create_index(op.f('ix_import_works_root_workspace_id'),
                    'import_works', ['root_workspace_id'], unique=False)
    op.create_index(op.f('ix_import_works_source_connection_id'),
                    'import_works', ['source_connection_id'], unique=False)
    op.create_index(op.f('ix_import_works_user_id'),
                    'import_works', ['user_id'], unique=False)
    op.create_index(op.f('ix_import_works_uuid'),
                    'import_works', ['uuid'], unique=True)
    op.create_index(op.f('ix_import_works_workspace_id'),
                    'import_works', ['workspace_id'], unique=False)
    op.create_table('sql_log',
                    sa.Column('sql_id', sa.Integer(), autoincrement=True,
                              nullable=False, comment='sql的ID'),
                    sa.Column('work_id', sa.Integer(),
                              nullable=False, comment='作业ID'),
                    sa.Column('task_name', sa.String(length=32),
                              nullable=True, comment='作业任务的名称'),
                    sa.Column('task_id', sa.Integer(),
                              nullable=True, comment='作业任务的id'),
                    sa.Column('task_uuid', sa.String(length=32),
                              nullable=True, comment='作业任务的uuid'),
                    sa.Column('task_stats', sa.Enum('START', 'FAIL', 'SUCCEED',
                                                    name='sqlrunstate'), nullable=False, comment='sql作业状态'),
                    sa.Column('current_time', sa.DateTime(timezone=True),
                              nullable=True, comment='当前的时间'),
                    sa.PrimaryKeyConstraint('sql_id')
                    )
    op.create_index(op.f('ix_sql_log_work_id'),
                    'sql_log', ['work_id'], unique=False)
    op.create_table('sqlrecord',
                    sa.Column('sql_id', sa.Integer(), autoincrement=True,
                              nullable=False, comment='sql的ID'),
                    sa.Column('user_id', sa.Integer(),
                              nullable=False, comment='用户ID'),
                    sa.Column('work_id', sa.Integer(),
                              nullable=False, comment='作业ID'),
                    sa.Column('sql', sa.Text(),
                              nullable=False, comment='sql语句'),
                    sa.Column('stats', sa.Enum('SUCCEED', 'FAIL', 'RUNNING',
                                               name='sqlstateenum'), nullable=False, comment='sql状态'),
                    sa.Column('status', sa.Integer(), nullable=False,
                              comment='数据是否有用，1表示有用，2表示数据删除'),
                    sa.Column('started', sa.DateTime(timezone=True),
                              nullable=True, comment='开始时间'),
                    sa.Column('ended', sa.DateTime(timezone=True),
                              nullable=True, comment='结束时间'),
                    sa.Column('rows', sa.Integer(),
                              nullable=True, comment='数据库行数'),
                    sa.Column('result', sa.Integer(), nullable=True,
                              comment='sql运行的结果， 其中1：表示成功， 2表示失败'),
                    sa.Column('work_name', sa.String(length=36),
                              nullable=True, comment='作业的名称'),
                    sa.Column('durations', sa.Float(),
                              nullable=True, comment='持续时间'),
                    sa.PrimaryKeyConstraint('sql_id')
                    )
    op.create_index(op.f('ix_sqlrecord_user_id'),
                    'sqlrecord', ['user_id'], unique=False)
    op.create_index(op.f('ix_sqlrecord_work_id'),
                    'sqlrecord', ['work_id'], unique=False)
    op.create_table('tasks',
                    sa.Column('task_id', sa.Integer(), autoincrement=True,
                              nullable=False, comment='任务ID'),
                    sa.Column('uuid', sa.String(length=32),
                              nullable=False, comment='任务UUID'),
                    sa.Column('work_id', sa.Integer(),
                              nullable=False, comment='作业ID'),
                    sa.Column('resource_task_id', sa.String(length=36),
                              nullable=True, comment='第三方任务ID'),
                    sa.Column('is_temporary', sa.Boolean(),
                              nullable=True, comment='是否临时任务'),
                    sa.Column('status', sa.Enum('WAITTING', 'STARTING', 'RUNNING', 'SUCCEEDED', 'FAILED', 'TERMINATING',
                                                'MANUAL_TERMINATED', 'SYSTEM_TERMINATED', name='taskstatusenum'), nullable=True, comment='任务状态'),
                    sa.Column('task_type', sa.Enum('COMMON', 'IMPORT', 'SQL',
                                                   'DAG', name='tasktypeenum'), nullable=True, comment='任务类型'),
                    sa.Column('name', sa.String(length=36),
                              nullable=True, comment='任务名称'),
                    sa.Column('excutable_file', sa.String(length=1023),
                              nullable=True, comment='任务可执行文件'),
                    sa.Column('excutable_sql', sa.Text(),
                              nullable=True, comment='任务可执行sql'),
                    sa.Column('started_at', sa.DateTime(timezone=True),
                              nullable=True, comment='开始时间'),
                    sa.Column('ended_at', sa.DateTime(timezone=True),
                              nullable=True, comment='结束时间'),
                    sa.Column('schedule_engine_type', sa.Enum(
                        'AIRFLOW', name='scheduleenginetype'), nullable=False, comment='调度引擎种类'),
                    sa.Column('schedule_engine_id', sa.String(
                        length=255), nullable=True, comment='调度引擎ID'),
                    sa.Column('schedule_engine_started_at', sa.DateTime(
                        timezone=True), nullable=True, comment='调度引擎开始时间'),
                    sa.Column('schedule_engine_ended_at', sa.DateTime(
                        timezone=True), nullable=True, comment='调度引擎结束时间'),
                    sa.Column('schedule_engine_state', sa.String(
                        length=31), nullable=True, comment='调度引擎状态'),
                    sa.Column('nodes', sa.Text(),
                              nullable=True, comment='DAG节点'),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text(
                        'now()'), nullable=True, comment='创建时间'),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              nullable=True, comment='更新时间'),
                    sa.Column('deleted_at', sa.DateTime(timezone=True),
                              nullable=True, comment='删除时间'),
                    sa.PrimaryKeyConstraint('task_id')
                    )
    op.create_index(op.f('ix_tasks_resource_task_id'), 'tasks',
                    ['resource_task_id'], unique=False)
    op.create_index(op.f('ix_tasks_schedule_engine_id'),
                    'tasks', ['schedule_engine_id'], unique=False)
    op.create_index(op.f('ix_tasks_uuid'), 'tasks', ['uuid'], unique=True)
    op.create_index(op.f('ix_tasks_work_id'), 'tasks',
                    ['work_id'], unique=False)
    op.create_table('work_versions',
                    sa.Column('version_id', sa.Integer(),
                              autoincrement=True, nullable=False, comment='版本ID'),
                    sa.Column('uuid', sa.String(length=32),
                              nullable=False, comment='版本UUID'),
                    sa.Column('work_id', sa.Integer(),
                              nullable=False, comment='作业ID'),
                    sa.Column('submitted_by', sa.String(length=32),
                              nullable=False, comment='提交人'),
                    sa.Column('submitted_at', sa.DateTime(timezone=True),
                              nullable=True, comment='提交时间'),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text(
                        'now()'), nullable=True, comment='创建时间'),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              nullable=True, comment='更新时间'),
                    sa.Column('deleted_at', sa.DateTime(timezone=True),
                              nullable=True, comment='删除时间'),
                    sa.PrimaryKeyConstraint('version_id')
                    )
    op.create_index(op.f('ix_work_versions_uuid'),
                    'work_versions', ['uuid'], unique=True)
    op.create_index(op.f('ix_work_versions_work_id'),
                    'work_versions', ['work_id'], unique=False)
    op.create_table('common_work_instances',
                    sa.Column('uuid', sa.String(length=32),
                              nullable=False, comment='作业UUID'),
                    sa.Column('user_id', sa.Integer(),
                              nullable=False, comment='用户ID'),
                    sa.Column('workspace_id', sa.Integer(),
                              nullable=False, comment='项目ID'),
                    sa.Column('root_workspace_id', sa.Integer(),
                              nullable=False, comment='根项目ID'),
                    sa.Column('name', sa.String(length=100),
                              nullable=False, comment='作业名称'),
                    sa.Column('description', sa.String(length=1023),
                              nullable=True, comment='作业描述'),
                    sa.Column('status', sa.Enum('WAITTING', 'EXECUTING', 'FINISHED',
                                                name='workstatusenum'), nullable=True, comment='作业状态'),
                    sa.Column('submitted_at', sa.DateTime(timezone=True),
                              nullable=True, comment='提交时间'),
                    sa.Column('submitted_by', sa.String(length=100),
                              nullable=True, comment='提交人'),
                    sa.Column('failed_retry_times', sa.Integer(),
                              nullable=True, comment='重试次数'),
                    sa.Column('retry_delta_minutes', sa.Integer(),
                              nullable=True, comment='重试间隔分钟数'),
                    sa.Column('delay_minutes', sa.Integer(),
                              nullable=True, comment='延迟分钟数'),
                    sa.Column('is_timeout_enabled', sa.Boolean(),
                              nullable=True, comment='超时判断'),
                    sa.Column('timeout_strategy', sa.Enum('MARKED_AS_FAILED', 'SEND_MESSAGE',
                                                          'NONE', name='timeoutstrategyenum'), nullable=True, comment='超时策略'),
                    sa.Column('timeout_minutes', sa.Integer(),
                              nullable=True, comment='超时分钟数'),
                    sa.Column('notice_strategy', sa.Enum('ALL', 'SUCCEED', 'FAIL', 'NONE',
                                                         name='noticestrategyenum'), nullable=True, comment='通知策略'),
                    sa.Column('timeout_template_id', sa.Integer(),
                              nullable=True, comment='超时通知模版ID'),
                    sa.Column('finish_template_id', sa.Integer(),
                              nullable=True, comment='完成通知模版ID'),
                    sa.Column('cron_expression', sa.String(length=1023),
                              nullable=True, comment='cron表达式'),
                    sa.Column('started_at', sa.DateTime(timezone=True),
                              nullable=True, comment='开始时间'),
                    sa.Column('ended_at', sa.DateTime(timezone=True),
                              nullable=True, comment='结束时间'),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text(
                        'now()'), nullable=True, comment='创建时间'),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              nullable=True, comment='更新时间'),
                    sa.Column('deleted_at', sa.DateTime(timezone=True),
                              nullable=True, comment='删除时间'),
                    sa.Column('instance_id', sa.Integer(), autoincrement=True,
                              nullable=False, comment='作业实例ID'),
                    sa.Column('work_id', sa.Integer(),
                              nullable=False, comment='作业ID'),
                    sa.Column('category', sa.Enum('DAG', 'SQL', 'SPARK_JAR',
                                                  name='categoryenum'), nullable=True, comment='作业类别'),
                    sa.Column('java_version', sa.Enum('JAVA_SE_8', 'JAVA_SE_11',
                                                      name='javaversionenum'), nullable=True, comment='JAVA版本'),
                    sa.Column('type', sa.Enum('STREAM', 'BATCH',
                                              name='worktypeenum'), nullable=True, comment='作业类型'),
                    sa.Column('run_frequency', sa.Enum('MINUTELY', 'ONCE', 'HOURLY', 'DAILY', 'WEEKLY',
                                                       'MONTHLY', 'YEARLY', 'ALWAYS', name='frequencyenum'), nullable=True, comment='运行频率'),
                    sa.Column('run_dependent', sa.Enum('ON_NOTHING', 'ON_PRE_SUCCEEDED',
                                                       'ON_PRE_FINISHED', name='workdependenum'), nullable=True, comment='运行依赖'),
                    sa.Column('interval', sa.Integer(),
                              nullable=True, comment='运行间隔'),
                    sa.Column('finished_batch_count', sa.Integer(),
                              nullable=True, comment='已运行任务批次数量'),
                    sa.Column('work_directory', sa.String(length=1023),
                              nullable=True, comment='工作目录'),
                    sa.Column('executable_file_name', sa.String(
                        length=1023), nullable=True, comment='可执行文件名称'),
                    sa.Column('executable_file_path', sa.String(
                        length=1023), nullable=True, comment='可执行文件路径'),
                    sa.Column('main_class_name', sa.String(
                        length=1023), nullable=True, comment='主类名称'),
                    sa.Column('extra_params', sa.String(length=1023),
                              nullable=True, comment='自定义参数'),
                    sa.Column('executable_sql', sa.Text(),
                              nullable=True, comment='可执行sql'),
                    sa.Column('connection_id', sa.Integer(),
                              nullable=False, comment='连接数据库id'),
                    sa.Column('relation', sa.Text(),
                              nullable=True, comment='节点关系'),
                    sa.Column('edges', sa.Text(),
                              nullable=True, comment='DAG边'),
                    sa.Column('nodes', sa.Text(),
                              nullable=True, comment='DAG节点'),
                    sa.ForeignKeyConstraint(
                        ['work_id'], ['common_works.work_id'], ),
                    sa.PrimaryKeyConstraint('instance_id')
                    )
    op.create_index(op.f('ix_common_work_instances_connection_id'),
                    'common_work_instances', ['connection_id'], unique=False)
    op.create_index(op.f('ix_common_work_instances_name'),
                    'common_work_instances', ['name'], unique=False)
    op.create_index(op.f('ix_common_work_instances_root_workspace_id'),
                    'common_work_instances', ['root_workspace_id'], unique=False)
    op.create_index(op.f('ix_common_work_instances_user_id'),
                    'common_work_instances', ['user_id'], unique=False)
    op.create_index(op.f('ix_common_work_instances_uuid'),
                    'common_work_instances', ['uuid'], unique=True)
    op.create_index(op.f('ix_common_work_instances_work_id'),
                    'common_work_instances', ['work_id'], unique=False)
    op.create_index(op.f('ix_common_work_instances_workspace_id'),
                    'common_work_instances', ['workspace_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_common_work_instances_workspace_id'),
                  table_name='common_work_instances')
    op.drop_index(op.f('ix_common_work_instances_work_id'),
                  table_name='common_work_instances')
    op.drop_index(op.f('ix_common_work_instances_uuid'),
                  table_name='common_work_instances')
    op.drop_index(op.f('ix_common_work_instances_user_id'),
                  table_name='common_work_instances')
    op.drop_index(op.f('ix_common_work_instances_root_workspace_id'),
                  table_name='common_work_instances')
    op.drop_index(op.f('ix_common_work_instances_name'),
                  table_name='common_work_instances')
    op.drop_index(op.f('ix_common_work_instances_connection_id'),
                  table_name='common_work_instances')
    op.drop_table('common_work_instances')
    op.drop_index(op.f('ix_work_versions_work_id'), table_name='work_versions')
    op.drop_index(op.f('ix_work_versions_uuid'), table_name='work_versions')
    op.drop_table('work_versions')
    op.drop_index(op.f('ix_tasks_work_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_uuid'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_schedule_engine_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_resource_task_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_sqlrecord_work_id'), table_name='sqlrecord')
    op.drop_index(op.f('ix_sqlrecord_user_id'), table_name='sqlrecord')
    op.drop_table('sqlrecord')
    op.drop_index(op.f('ix_sql_log_work_id'), table_name='sql_log')
    op.drop_table('sql_log')
    op.drop_index(op.f('ix_import_works_workspace_id'),
                  table_name='import_works')
    op.drop_index(op.f('ix_import_works_uuid'), table_name='import_works')
    op.drop_index(op.f('ix_import_works_user_id'), table_name='import_works')
    op.drop_index(op.f('ix_import_works_source_connection_id'),
                  table_name='import_works')
    op.drop_index(op.f('ix_import_works_root_workspace_id'),
                  table_name='import_works')
    op.drop_index(op.f('ix_import_works_name'), table_name='import_works')
    op.drop_index(op.f('ix_import_works_dest_connection_id'),
                  table_name='import_works')
    op.drop_table('import_works')
    op.drop_index(op.f('ix_import_work_instances_workspace_id'),
                  table_name='import_work_instances')
    op.drop_index(op.f('ix_import_work_instances_work_id'),
                  table_name='import_work_instances')
    op.drop_index(op.f('ix_import_work_instances_uuid'),
                  table_name='import_work_instances')
    op.drop_index(op.f('ix_import_work_instances_user_id'),
                  table_name='import_work_instances')
    op.drop_index(op.f('ix_import_work_instances_source_connection_id'),
                  table_name='import_work_instances')
    op.drop_index(op.f('ix_import_work_instances_root_workspace_id'),
                  table_name='import_work_instances')
    op.drop_index(op.f('ix_import_work_instances_name'),
                  table_name='import_work_instances')
    op.drop_index(op.f('ix_import_work_instances_dest_connection_id'),
                  table_name='import_work_instances')
    op.drop_table('import_work_instances')
    op.drop_index(op.f('ix_connections_workspace_id'),
                  table_name='connections')
    op.drop_index(op.f('ix_connections_uuid'), table_name='connections')
    op.drop_table('connections')
    op.drop_index(op.f('ix_common_works_workspace_id'),
                  table_name='common_works')
    op.drop_index(op.f('ix_common_works_uuid'), table_name='common_works')
    op.drop_index(op.f('ix_common_works_user_id'), table_name='common_works')
    op.drop_index(op.f('ix_common_works_root_workspace_id'),
                  table_name='common_works')
    op.drop_index(op.f('ix_common_works_name'), table_name='common_works')
    op.drop_index(op.f('ix_common_works_connection_id'),
                  table_name='common_works')
    op.drop_table('common_works')
    op.drop_index(op.f('ix_analysis_task_uuid'), table_name='analysis')
    op.drop_table('analysis')
    # ### end Alembic commands ###
